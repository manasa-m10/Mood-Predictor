# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KbIwKsNuIHdb3UaYSLoA88ZEsOhtaY5E
"""

from fastapi import FastAPI
from pydantic import BaseModel
from transformers import BertTokenizer, BertForSequenceClassification
import torch
import joblib
import numpy as np

# Load model and tokenizer
model_path = "/content/drive/MyDrive/archive/mood_classifier"
model = BertForSequenceClassification.from_pretrained(model_path)
tokenizer = BertTokenizer.from_pretrained(model_path)
le = joblib.load(f"{model_path}/label_encoder.pkl")

model.eval()

app = FastAPI()

class TextInput(BaseModel):
    text: str

@app.post("/moodpredictor")
def predict_mood(data: TextInput):
    inputs = tokenizer(data.text, return_tensors="pt", truncation=True, padding=True)
    with torch.no_grad():
        outputs = model(**inputs)
        prediction = torch.argmax(outputs.logits, dim=1).item()
    mood = le.inverse_transform([prediction])[0]
    return {"mood": mood}